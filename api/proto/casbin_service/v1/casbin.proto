syntax = "proto3";

package casbin_service.v1;

import "google/protobuf/empty.proto";

option go_package = "github.com/devexps/go-casbin/api/gen/go/casbin_service/v1;v1";
option java_multiple_files = true;
option java_package = "dev.gomicro.api.casbin_service.v1";

// The casbin service definition.
service CasbinService {
  rpc Enforce (EnforceRequest) returns (BoolReply);

  rpc LoadPolicy (google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc SavePolicy (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc AddPolicy (PolicyRequest) returns (BoolReply);
  rpc AddNamedPolicy (PolicyRequest) returns (BoolReply);
  rpc RemovePolicy (PolicyRequest) returns (BoolReply);
  rpc RemoveNamedPolicy (PolicyRequest) returns (BoolReply);
  rpc RemoveFilteredPolicy (FilteredPolicyRequest) returns (BoolReply);
  rpc RemoveFilteredNamedPolicy (FilteredPolicyRequest) returns (BoolReply);
  rpc GetPolicy (google.protobuf.Empty) returns (Array2DReply);
  rpc GetNamedPolicy (PolicyRequest) returns (Array2DReply);
  rpc GetFilteredPolicy (FilteredPolicyRequest) returns (Array2DReply);
  rpc GetFilteredNamedPolicy (FilteredPolicyRequest) returns (Array2DReply);

  rpc AddGroupingPolicy (PolicyRequest) returns (BoolReply);
  rpc AddNamedGroupingPolicy (PolicyRequest) returns (BoolReply);
  rpc RemoveGroupingPolicy (PolicyRequest) returns (BoolReply);
  rpc RemoveNamedGroupingPolicy (PolicyRequest) returns (BoolReply);
  rpc RemoveFilteredGroupingPolicy (FilteredPolicyRequest) returns (BoolReply);
  rpc RemoveFilteredNamedGroupingPolicy (FilteredPolicyRequest) returns (BoolReply);
  rpc GetGroupingPolicy (google.protobuf.Empty) returns (Array2DReply);
  rpc GetNamedGroupingPolicy(PolicyRequest) returns (Array2DReply);
  rpc GetFilteredGroupingPolicy (FilteredPolicyRequest) returns (Array2DReply);
  rpc GetFilteredNamedGroupingPolicy (FilteredPolicyRequest) returns (Array2DReply);

  rpc GetAllSubjects (google.protobuf.Empty) returns (ArrayReply);
  rpc GetAllNamedSubjects (SimpleGetRequest) returns (ArrayReply);
  rpc GetAllObjects (google.protobuf.Empty) returns (ArrayReply);
  rpc GetAllNamedObjects (SimpleGetRequest) returns (ArrayReply);
  rpc GetAllActions (google.protobuf.Empty) returns (ArrayReply);
  rpc GetAllNamedActions (SimpleGetRequest) returns (ArrayReply);
  rpc GetAllRoles (google.protobuf.Empty) returns (ArrayReply);
  rpc GetAllNamedRoles (SimpleGetRequest) returns (ArrayReply);

  rpc HasPolicy (PolicyRequest) returns (BoolReply);
  rpc HasNamedPolicy (PolicyRequest) returns (BoolReply);
  rpc HasGroupingPolicy (PolicyRequest) returns (BoolReply);
  rpc HasNamedGroupingPolicy (PolicyRequest) returns (BoolReply);

  rpc GetRolesForUser (UserRoleRequest) returns (ArrayReply);
  rpc GetImplicitRolesForUser (UserRoleRequest) returns (ArrayReply);
  rpc GetUsersForRole (UserRoleRequest) returns (ArrayReply);
  rpc HasRoleForUser (UserRoleRequest) returns (BoolReply);
  rpc AddRoleForUser (UserRoleRequest) returns (BoolReply);
  rpc DeleteRoleForUser (UserRoleRequest) returns (BoolReply);
  rpc DeleteRolesForUser (UserRoleRequest) returns (BoolReply);
  rpc DeleteUser (UserRoleRequest) returns (BoolReply);
  rpc DeleteRole (UserRoleRequest) returns (BoolReply);

  rpc GetPermissionsForUser (PermissionRequest) returns (Array2DReply);
  rpc GetImplicitPermissionsForUser (PermissionRequest) returns (Array2DReply);
  rpc DeletePermission (PermissionRequest) returns (BoolReply);
  rpc AddPermissionForUser (PermissionRequest) returns (BoolReply);
  rpc DeletePermissionForUser (PermissionRequest) returns (BoolReply);
  rpc DeletePermissionsForUser (PermissionRequest) returns (BoolReply);
  rpc HasPermissionForUser (PermissionRequest) returns (BoolReply);
}

message EnforceRequest {
  repeated string params = 1;
}

message PolicyRequest {
  string pType = 1;
  repeated string params = 2;
}

message FilteredPolicyRequest {
  string pType = 1;
  int32 fieldIndex = 2;
  repeated string fieldValues = 3;
}

message SimpleGetRequest {
  string pType = 1;
}

message UserRoleRequest {
  string user = 1;
  string role = 2;
}

message PermissionRequest {
  string user = 1;
  repeated string permissions = 2;
}

message BoolReply {
  bool res = 1;
}

message ArrayReply {
  repeated string array = 1;
}

message Array2DReply {
  message d {
    repeated string d1 = 1;
  }

  repeated d d2 = 1;
}