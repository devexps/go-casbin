// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: casbin_service/v1/error_reason.proto

package v1

import (
	_ "github.com/devexps/go-micro/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	ErrorReason_ENFORCE_INVALID                              ErrorReason = 0
	ErrorReason_ENFORCE_WITH_MATCHER_FAILED                  ErrorReason = 1
	ErrorReason_LOAD_POLICY_FAILED                           ErrorReason = 3
	ErrorReason_SAVE_POLICY_FAILED                           ErrorReason = 4
	ErrorReason_ADD_NAMED_POLICY_FAILED                      ErrorReason = 5
	ErrorReason_REMOVE_NAMED_POLICY_FAILED                   ErrorReason = 6
	ErrorReason_REMOVE_FILTERED_NAMED_POLICY_FAILED          ErrorReason = 7
	ErrorReason_ADD_NAMED_GROUPING_POLICY_FAILED             ErrorReason = 8
	ErrorReason_REMOVE_NAMED_GROUPING_POLICY_FAILED          ErrorReason = 9
	ErrorReason_REMOVE_FILTERED_NAMED_GROUPING_POLICY_FAILED ErrorReason = 10
	ErrorReason_ROLE_MANAGER_IS_NIL                          ErrorReason = 11
	ErrorReason_GET_USER_ROLES_FAILED                        ErrorReason = 12
	ErrorReason_GET_IMPLICIT_ROLES_FOR_USER_FAILED           ErrorReason = 13
	ErrorReason_GET_USERS_FAILED                             ErrorReason = 14
	ErrorReason_GET_ROLES_FOR_USER_FAILED                    ErrorReason = 15
	ErrorReason_ADD_GROUPING_POLICY_FAILED                   ErrorReason = 16
	ErrorReason_REMOVE_GROUPING_POLICY_FAILED                ErrorReason = 17
	ErrorReason_REMOVE_FILTERED_GROUPING_POLICY_FAILED       ErrorReason = 18
	ErrorReason_DELETE_USER_FAILED                           ErrorReason = 19
	ErrorReason_DELETE_ROLE_FAILED                           ErrorReason = 20
	ErrorReason_GET_IMPLICIT_PERMISSIONS_FOR_USER_FAILED     ErrorReason = 21
	ErrorReason_REMOVE_FILTERED_POLICY_FAILED                ErrorReason = 22
	ErrorReason_ADD_POLICY_FAILED                            ErrorReason = 23
	ErrorReason_REMOVE_POLICY_FAILED                         ErrorReason = 24
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "ENFORCE_INVALID",
		1:  "ENFORCE_WITH_MATCHER_FAILED",
		3:  "LOAD_POLICY_FAILED",
		4:  "SAVE_POLICY_FAILED",
		5:  "ADD_NAMED_POLICY_FAILED",
		6:  "REMOVE_NAMED_POLICY_FAILED",
		7:  "REMOVE_FILTERED_NAMED_POLICY_FAILED",
		8:  "ADD_NAMED_GROUPING_POLICY_FAILED",
		9:  "REMOVE_NAMED_GROUPING_POLICY_FAILED",
		10: "REMOVE_FILTERED_NAMED_GROUPING_POLICY_FAILED",
		11: "ROLE_MANAGER_IS_NIL",
		12: "GET_USER_ROLES_FAILED",
		13: "GET_IMPLICIT_ROLES_FOR_USER_FAILED",
		14: "GET_USERS_FAILED",
		15: "GET_ROLES_FOR_USER_FAILED",
		16: "ADD_GROUPING_POLICY_FAILED",
		17: "REMOVE_GROUPING_POLICY_FAILED",
		18: "REMOVE_FILTERED_GROUPING_POLICY_FAILED",
		19: "DELETE_USER_FAILED",
		20: "DELETE_ROLE_FAILED",
		21: "GET_IMPLICIT_PERMISSIONS_FOR_USER_FAILED",
		22: "REMOVE_FILTERED_POLICY_FAILED",
		23: "ADD_POLICY_FAILED",
		24: "REMOVE_POLICY_FAILED",
	}
	ErrorReason_value = map[string]int32{
		"ENFORCE_INVALID":                              0,
		"ENFORCE_WITH_MATCHER_FAILED":                  1,
		"LOAD_POLICY_FAILED":                           3,
		"SAVE_POLICY_FAILED":                           4,
		"ADD_NAMED_POLICY_FAILED":                      5,
		"REMOVE_NAMED_POLICY_FAILED":                   6,
		"REMOVE_FILTERED_NAMED_POLICY_FAILED":          7,
		"ADD_NAMED_GROUPING_POLICY_FAILED":             8,
		"REMOVE_NAMED_GROUPING_POLICY_FAILED":          9,
		"REMOVE_FILTERED_NAMED_GROUPING_POLICY_FAILED": 10,
		"ROLE_MANAGER_IS_NIL":                          11,
		"GET_USER_ROLES_FAILED":                        12,
		"GET_IMPLICIT_ROLES_FOR_USER_FAILED":           13,
		"GET_USERS_FAILED":                             14,
		"GET_ROLES_FOR_USER_FAILED":                    15,
		"ADD_GROUPING_POLICY_FAILED":                   16,
		"REMOVE_GROUPING_POLICY_FAILED":                17,
		"REMOVE_FILTERED_GROUPING_POLICY_FAILED":       18,
		"DELETE_USER_FAILED":                           19,
		"DELETE_ROLE_FAILED":                           20,
		"GET_IMPLICIT_PERMISSIONS_FOR_USER_FAILED":     21,
		"REMOVE_FILTERED_POLICY_FAILED":                22,
		"ADD_POLICY_FAILED":                            23,
		"REMOVE_POLICY_FAILED":                         24,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_casbin_service_v1_error_reason_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_casbin_service_v1_error_reason_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_casbin_service_v1_error_reason_proto_rawDescGZIP(), []int{0}
}

var File_casbin_service_v1_error_reason_proto protoreflect.FileDescriptor

var file_casbin_service_v1_error_reason_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x8a,
	0x07, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x0f, 0x45, 0x4e, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x1a, 0x03, 0xa8, 0x45, 0x65, 0x12, 0x24, 0x0a, 0x1b, 0x45, 0x4e, 0x46, 0x4f,
	0x52, 0x43, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45, 0x52,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x03, 0xa8, 0x45, 0x66, 0x12, 0x1b,
	0x0a, 0x12, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x03, 0xa8, 0x45, 0x67, 0x12, 0x1b, 0x0a, 0x12, 0x53,
	0x41, 0x56, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x1a, 0x03, 0xa8, 0x45, 0x68, 0x12, 0x20, 0x0a, 0x17, 0x41, 0x44, 0x44, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x03, 0xa8, 0x45, 0x69, 0x12, 0x23, 0x0a, 0x1a, 0x52, 0x45,
	0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x1a, 0x03, 0xa8, 0x45, 0x6a, 0x12,
	0x2c, 0x0a, 0x23, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x45, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x1a, 0x03, 0xa8, 0x45, 0x6b, 0x12, 0x29, 0x0a,
	0x20, 0x41, 0x44, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x08, 0x1a, 0x03, 0xa8, 0x45, 0x6c, 0x12, 0x2c, 0x0a, 0x23, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x09, 0x1a, 0x03, 0xa8, 0x45, 0x6d, 0x12, 0x35, 0x0a, 0x2c, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x1a, 0x03, 0xa8, 0x45, 0x6e, 0x12, 0x1c, 0x0a,
	0x13, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x49, 0x53,
	0x5f, 0x4e, 0x49, 0x4c, 0x10, 0x0b, 0x1a, 0x03, 0xa8, 0x45, 0x6f, 0x12, 0x1e, 0x0a, 0x15, 0x47,
	0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x0c, 0x1a, 0x03, 0xa8, 0x45, 0x70, 0x12, 0x2b, 0x0a, 0x22, 0x47,
	0x45, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x0d, 0x1a, 0x03, 0xa8, 0x45, 0x71, 0x12, 0x19, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0e, 0x1a, 0x03,
	0xa8, 0x45, 0x72, 0x12, 0x22, 0x0a, 0x19, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53,
	0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x0f, 0x1a, 0x03, 0xa8, 0x45, 0x73, 0x12, 0x23, 0x0a, 0x1a, 0x41, 0x44, 0x44, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x10, 0x1a, 0x03, 0xa8, 0x45, 0x74, 0x12, 0x26, 0x0a, 0x1d,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x5f,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x11, 0x1a,
	0x03, 0xa8, 0x45, 0x75, 0x12, 0x2f, 0x0a, 0x26, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x12,
	0x1a, 0x03, 0xa8, 0x45, 0x76, 0x12, 0x1b, 0x0a, 0x12, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x13, 0x1a, 0x03, 0xa8,
	0x45, 0x77, 0x12, 0x1b, 0x0a, 0x12, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x14, 0x1a, 0x03, 0xa8, 0x45, 0x78, 0x12,
	0x31, 0x0a, 0x28, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x15, 0x1a, 0x03, 0xa8,
	0x45, 0x79, 0x12, 0x26, 0x0a, 0x1d, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x4c,
	0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x16, 0x1a, 0x03, 0xa8, 0x45, 0x7a, 0x12, 0x1a, 0x0a, 0x11, 0x41, 0x44,
	0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x17, 0x1a, 0x03, 0xa8, 0x45, 0x7b, 0x12, 0x1d, 0x0a, 0x14, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x18,
	0x1a, 0x03, 0xa8, 0x45, 0x7c, 0x1a, 0x04, 0xa0, 0x45, 0xf4, 0x03, 0x42, 0x63, 0x0a, 0x21, 0x64,
	0x65, 0x76, 0x2e, 0x67, 0x6f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x61, 0x73, 0x62, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x76, 0x65, 0x78, 0x70, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_casbin_service_v1_error_reason_proto_rawDescOnce sync.Once
	file_casbin_service_v1_error_reason_proto_rawDescData = file_casbin_service_v1_error_reason_proto_rawDesc
)

func file_casbin_service_v1_error_reason_proto_rawDescGZIP() []byte {
	file_casbin_service_v1_error_reason_proto_rawDescOnce.Do(func() {
		file_casbin_service_v1_error_reason_proto_rawDescData = protoimpl.X.CompressGZIP(file_casbin_service_v1_error_reason_proto_rawDescData)
	})
	return file_casbin_service_v1_error_reason_proto_rawDescData
}

var file_casbin_service_v1_error_reason_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_casbin_service_v1_error_reason_proto_goTypes = []interface{}{
	(ErrorReason)(0), // 0: casbin_service.v1.ErrorReason
}
var file_casbin_service_v1_error_reason_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_casbin_service_v1_error_reason_proto_init() }
func file_casbin_service_v1_error_reason_proto_init() {
	if File_casbin_service_v1_error_reason_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_casbin_service_v1_error_reason_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_casbin_service_v1_error_reason_proto_goTypes,
		DependencyIndexes: file_casbin_service_v1_error_reason_proto_depIdxs,
		EnumInfos:         file_casbin_service_v1_error_reason_proto_enumTypes,
	}.Build()
	File_casbin_service_v1_error_reason_proto = out.File
	file_casbin_service_v1_error_reason_proto_rawDesc = nil
	file_casbin_service_v1_error_reason_proto_goTypes = nil
	file_casbin_service_v1_error_reason_proto_depIdxs = nil
}
